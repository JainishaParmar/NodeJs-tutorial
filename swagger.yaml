swagger: '2.0'
info:
  version: '1.0'
  title: My tutorial project
  description: An app to manage Tutorials
host: localhost:3000
basePath: /
tags:
  - name: Tutorials
    description: API for tutorial
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /tutorials:
    get:
      tags:
        - Tutorials
      summary: Get all tutorials in system
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Tutorial'
        '500':
          description: 'Internal server error'
          schema:
            $ref: '#/definitions/500Response'

    post:
      summary: Create tutorials in system
      tags:
        - Tutorials
      parameters:
        - name: Tutorials
          in: body
          description: Tutorial that we want to create
          schema:
            $ref: '#/definitions/TutorialCreateBody'
      produces:
        - application/json
      responses:
        '201':
          description: New tutorial is created
          schema:
            $ref: '#/definitions/Tutorial'
        '400':
          description: 'Invalid tutorial Id'
          schema:
            $ref: '#/definitions/400Response'
        '500':
          description: 'Internal server error'
          schema:
            $ref: '#/definitions/500Response'

  /tutorials/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the tutorial
        type: string
    delete:
      summary: Delete tutorial with given ID
      tags:
        - Tutorials
      responses:
        '200':
          description: Tutorial is deleted
        '404':
          description: 'Tutorial not found'
          schema:
            $ref: '#/definitions/404Response'
        '500':
          description: 'Internal server error'
          schema:
            $ref: '#/definitions/500Response'

    patch:
      summary: Update tutorial with give ID
      tags:
        - Tutorials
      parameters:
        - name: Tutorials
          in: body
          description: Tutorial that we want to update
          schema:
            $ref: '#/definitions/TutorialCreateBody'
      responses:
        '204':
          description: Tutorial is updated
        '404':
          description: 'Tutorial not found'
          schema:
            $ref: '#/definitions/404Response'
        '400':
          description: 'Invalid tutorial Id'
          schema:
            $ref: '#/definitions/400Response'
        '500':
          description: 'Internal Server Error'
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - Tutorials
      summary: Get tutorial By ID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Tutorial'
        '404':
          description: 'Tutorial not found'
          schema:
            $ref: '#/definitions/404Response'
        '500':
          description: 'Internal Server Error'
          schema:
            $ref: '#/definitions/500Response'
  /User:
    post:
      summary: Register user into system
      tags:
        - User
      parameters:
        - name: User
          in: body
          description: Enter user details
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '201':
          description: New user is created
          schema:
            $ref: '#/definitions/User'
        '500':
          description: 'Internal server error'
          schema:
            $ref: '#/definitions/500Response'
  /User/reset-password/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Id of the user
        type: string
    patch:
      summary: Reset password using user id
      tags:
        - User
      parameters:
        - name: User
          in: body
          description: User password reset
          schema:
            $ref: '#/definitions/UserResetPassword'
      responses:
        '204':
          description: Password is updated
        '404':
          description: 'User not found'
          schema:
            $ref: '#/definitions/404Response'
        '400':
          description: 'Invalid User Id'
          schema:
            $ref: '#/definitions/400Response'
        '500':
          description: 'Internal Server Error'
          schema:
            $ref: '#/definitions/500Response'
  /User/forget-password/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Id of the user
        type: string
    patch:
      summary: Forget password using user id through email otp
      tags:
        - User
      parameters:
        - name: User
          in: body
          description: Forget password
          schema:
            $ref: '#/definitions/UserForgetPassword'
      responses:
        '204':
          description: Password is updated
        '404':
          description: 'User not found'
          schema:
            $ref: '#/definitions/404Response'
        '400':
          description: 'Invalid User Id'
          schema:
            $ref: '#/definitions/400Response'
        '500':
          description: 'Internal Server Error'
          schema:
            $ref: '#/definitions/500Response'
  /User/reset-password-ott/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Id of the user
        type: string
    patch:
      summary: Reset password using ott
      tags:
        - User
      parameters:
        - name: User
          in: body
          description: User password reset using token
          schema:
            $ref: '#/definitions/UserResetPasswordOtt'
      responses:
        '204':
          description: Password is updated
        '404':
          description: 'User not found'
          schema:
            $ref: '#/definitions/404Response'
        '400':
          description: 'Invalid User Id'
          schema:
            $ref: '#/definitions/400Response'
        '500':
          description: 'Internal Server Error'
          schema:
            $ref: '#/definitions/500Response'
  /User/login:
    get:
      summary: Login user into system
      tags:
        - User
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        '200':
          description: OK
        '404':
          description: 'User not found'
          schema:
            $ref: '#/definitions/404Response'
        '500':
          description: 'Internal Server Error'
          schema:
            $ref: '#/definitions/500Response'

definitions:
  Tutorial:
    required:
      - _id
      - title
      - description
      - createdAt
      - updatedAt
      - published
    properties:
      _id:
        type: string
        format: uuid
        uniqueItems: true
      title:
        type: string
      description:
        type: string
      published:
        type: boolean
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  
  User:
    required:
      - firstName
      - lastName
      - userName
      - email
      - password
    
    properties:
      firstName: 
        type: string
      lastName: 
        type: string
      userName:
        type: string
      email:
        type: string
      password:
        type: string
  UserResetPassword:
    required:
      - password
    properties:
      password:
        type: string
  TutorialCreateBody:
    required:
      - title
      - description
      - published
    properties:
      title:
        type: string
      description:
        type: string
      published:
        type: boolean
  UserForgetPassword:
    required:
      - otp
      - password
    properties:
      otp:
        type: number
      password:
        type: string 
  UserResetPasswordOtt:
    required:
      - password
      - token
    properties:
      password:
        type: string
      token:
        type: string
  UserLogin:
    required:
      - userName
      - password
    properties:
      userName:
        type: string
      password:
        type: string

  500Response:
    type: object
    required:
      - message
    properties:
      message:
        type: string

  404Response:
    type: object
    required:
      - message
    properties:
      message:
        type: string

  400Response:
    type: object
    required:
      - message
    properties:
      message:
        type: string
